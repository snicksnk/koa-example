swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World Appa
# during dev, should point to your local machine
host: 127.0.0.1:5000
# basePath prefixes all resource paths 
basePath: /api/v1
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
securityDefinitions:
  UserSecurity:
    type: apiKey
    in: header
    name: x-access-token
paths:
  /users/:
    # binds a127 app logic to a route
    x-swagger-router-controller: user
    post:
      description: Sign up
      # used as the method name of the controller
      operationId: signUp
      parameters:
        - name: user 
          in: body
          description: task object
          required: true
          schema:
            $ref: '#/definitions/UserSignUp'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UserSignUp"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /auth:
    x-swagger-router-controller: user
    post:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: signIn
      parameters:
        - name: user 
          in: body
          description: task object
          required: true
          schema:
            $ref: '#/definitions/UserSignIn'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UserSignInSuccess"
        "403":
          description: Error
          schema: 
            $ref: "#/definitions/UserSignInError"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /auth/google:
    get: 
      description: Google auth init
      responses: 
        "200":
          description: Ok
  /auth/vk:
    get: 
      description: Vk auth init
      responses: 
        "200":
          description: Ok
  /feeds:
    get:
      description: Get feeds
      responses:
        "200":
          description: Ok
    post:
      description: Crete feed
      security:
        - UserSecurity: []
      parameters:
        - name: feed 
          in: body
          description: task object
          required: true
          schema:
            $ref: '#/definitions/Feed'
      responses:
        "200":
          description: Success
          
  /feeds/{id}:
    get:
      description: Get feeds
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Ok
    put:
      description: Update feed
      security:
        - UserSecurity: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: feed 
          in: body
          description: task object
          required: true
          schema:
            $ref: '#/definitions/Feed'
      responses:
        "200":
          description: Success
    delete:
      description: Update feed
      security:
        - UserSecurity: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
        
 
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  Feed:
    properties:
      title:
        type: string
      content:
        type: string
  UserSignUp:
    properties:
      username:
        type: string
      password:
        type: string
  UserSignIn:
    required:
      - username
    properties:
      username:
        type: string
      password:
        type: string
  UserSignInSuccess:
    required:
      - id
      - email
      - token
    properties:
      id:
        type: string
      email:
        type: string
      token:
        type: string
  UserSignInError:
    required:
      - error
    properties:
      error:
        type: string
  
